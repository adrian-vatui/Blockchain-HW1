{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "getRegistrationTax",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isRegisteredProducer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "producerAddress",
						"type": "address"
					}
				],
				"name": "isRegisteredProducer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "registerProducer",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "productId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "producer",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "volume",
								"type": "uint256"
							}
						],
						"internalType": "struct ProductIdentification.Product",
						"name": "product",
						"type": "tuple"
					}
				],
				"name": "registerProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newRegistrationTax",
						"type": "uint256"
					}
				],
				"name": "setRegistrationTax",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "TODO write",
			"kind": "dev",
			"methods": {},
			"title": "ProductIdentification",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ProductIdentification.sol": "ProductIdentification"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Owned.sol": {
			"keccak256": "0x299107b6004248409e8781e23dd030afd02b4fd9b7b18221c6994deea1670886",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://bb717b00bd85e60456e6cff410164d785201cbfac819a2192278116d447a67ba",
				"dweb:/ipfs/QmNTx2jhpHUdevzmE42Te6wqrGfwyVtgNcVLG3G2tyvyCy"
			]
		},
		"contracts/ProductIdentification.sol": {
			"keccak256": "0xdeb38e2226096212e16c1611e0018b5be83adeef91bc7bc5114291ce9f45b7c4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://25eab9c2457c0ab2fb1c6d8e9955f8840b4e0e93b3918bffa8ac52c7956671ca",
				"dweb:/ipfs/QmfWmsikpdNV9CxQioTa9JpChXs53kkBTCjAxbq5b4tzpU"
			]
		}
	},
	"version": 1
}